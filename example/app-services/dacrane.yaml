name: local-docker
parameter:
  type: object
  properties:
    api: { type: string }
    tag: { type: string, default: "latest" }
modules:
- module: resource/docker
  name: docker
  parameters:
    name: api
    image: ${{ parameters.api.image }}
    tag: ${{ arguments.tag >> "latest" }}
    port: 3000:3000
    env:
      - name: PORT
        value: "3000"
---
name: api-image
parameter:
  type: object
  properties:
    tag: { type: string, default: "latest" }
dependencies:
- name: acr
  module: resource/azure-container-registry
modules:
- name: api-image
  module: artifact/docker
  parameters:
    image: sample-api
    tag: ${{ parameter.tag }}
    remote:
      if: ${{ module.acr != null }}
      url: ${{ module.acr.url }}
      user: ${{ module.acr.user }}
      password: ${{ module.acr.password }}
---
name: "app-service"
argument:
parameter:
  type: object
  properties:
    spec: { type: string, default: "low", enum: ["low", "high"] }
dependencies:
- name: base
  module: base
- name: api
  module: api-image
modules:
- name: credentials
  module: azure_credentials
- name: asp
  module: resource/azure-app-service-plan
  argument:
    name: ${{ module.base.parameter.prefix }}-sample-asp
    resource_group_name: ${{ module.base.rg.name }}
    location: "Japan East"
    kind: "Linux"
    sku:
      tier: '${{ {"low": "Basic", "high": "Premium" }[module.spec] }}'
      name: '${{ {"low": "B1", "high": "P1" }[module.spec] }}'
    credentials: ${{ module.credentials }}
- name: as
  module: resource/azure-app-service
  argument:
    name: ${{ module.base.parameter.prefix }}-sample-as
    resource_group_name: ${{ module.base.rg.name }}
    location: "Japan East"
    app_service_plan_id: ${{ module.base.asp.name }}
    site_config:
      linux_fx_version: DOCKER|${{ module.base.acr.url }}/sample-api:${{ module.api.tag }}
    app_settings:
      DOCKER_REGISTRY_SERVER_URL: ${{ module.base.acr.url }}
      DOCKER_REGISTRY_SERVER_USERNAME: ${{ module.base.acr.user }}
      DOCKER_REGISTRY_SERVER_PASSWORD: ${{ module.base.acr.password }}
      WEBSITES_PORT: "3000"
    credentials: ${{ module.credentials }}
---
name: base
parameter:
  type: object
  properties:
    prefix: { type: string, default: "dacrane" }
modules:
- name: credentials
  module: azure_credentials
- name: rg
  module: resource/azure-resource-group
  argument:
    name: ${{ parameter.prefix }}-sample-rg
    location: "Japan East"
    credentials: ${{ module.credentials.credentials }}
- name: acr
  module: resource/azure-container-registry
  argument:
    name: ${{ parameter.prefix }}sampleacr
    resource_group_name: ${{ module.rg.name }}
    location: "Japan East"
    credentials: ${{ module.credentials.credentials }}
---
name: azure_credentials
modules:
- name: credentials
  module: data/environment
  argument:
    subscription_id: AZURE_SUBSCRIPTION_ID
    tenant_id: AZURE_TENANT_ID
    client_id: AZURE_CLIENT_ID
    username: AZURE_USERNANE
    password: AZURE_PASSWORD

kind: artifact
name: api
provider: docker
parameters:
  image: sample-api
  tag: ${ data.argument.tag }
  dockerfile: ./Dockerfile
  remote:
    if: ${ data.config.service == "app-service" }
    url: ${ resource.acr.url }
    user: ${ resource.acr.user }
    password: ${ resource.acr.password }
---
if: ${ data.config.service == "app-service" }
kind: resource
name: acr
provider: azure-container-registry
parameters:
  name: sampleacr
  resource_group_name: sample-rg
  location: "Japan East"
  credentials: ${ data.azure_credential }
---
if: ${ data.config.service == "app-service" }
kind: resource
name: rg
provider: azure-resource-group
parameters:
  name: sample-rg
  location: "Japan East"
  credentials: ${ data.azure_credential }
---
if: ${ data.config.service == "app-service" }
kind: resource
name: asp
provider: azure-app-service-plan
parameters:
  name: sample-asp
  resource_group_name: sample-rg
  location: "Japan East"
  kind: "Windows"
  sku:
    tier: '${ {"low": "Basic", "high": "Premium" }[data.config.spec] }'
    name: '${ {"low": "B1", "high": "P1" }[data.config.spec] }'
  credentials: ${ data.azure_credential }
---
if: ${ data.config.service == "app-service" }
kind: resource
name: as
provider: azure-app-service
parameters:
  name: sample-as
  resource_group_name: sample-rg
  location: "Japan East"
  app_service_plan_id: sample-asp
  site_config:
    linux_fx_version: DOCKER|${ resource.acr.url }/sample-api:${ data.argument.tag }
  app_settings:
    DOCKER_REGISTRY_SERVER_URL: ${ resource.acr.url }
    DOCKER_REGISTRY_SERVER_USERNAME: ${ resource.acr.user }
    DOCKER_REGISTRY_SERVER_PASSWORD: ${ resource.acr.password }
    WEBSITES_PORT: "3000"
  credentials: ${ data.azure_credential }
---
if: ${ data.config.service == "local-docker" }
kind: resource
name: docker
provider: docker
parameters:
  image: sample-api
  tag: ${ data.argument.tag }
  port: 3000:3000
  env:
    - name: PORT
      value: 3000
---
kind: data
name: azure_credential
provider: environment
parameters:
  - name: subscription_id
  - name: tenant_id
  - name: client_id
  - name: username
  - name: password
    secret: true
---
kind: data
name: config
provider: environment
parameters:
  - name: service
    enum: ["local-docker", "app-service"]
  - name: spec
    enum: ["low", "high"]
---
kind: data
name: argument
provider: argument
parameters:
  - name: tag
    default: "latest"
